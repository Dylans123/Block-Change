{"ast":null,"code":"var _jsxFileName = \"/Users/dylanskelly/Desktop/block-change/src/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    console.log(Web3.givenProvider);\n\n    if (window.etherium) {\n      const web3 = new Web3(window.etherium);\n\n      try {\n        // Request account access if needed\n        await window.ethereum.enable(); // Acccounts now exposed\n\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts);\n      } catch (error) {\n        // User denied account access...\n        console.log(error);\n      }\n    } // const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n    // const network = await web3.eth.net.getNetworkType();\n    // console.log(\"network: \" + network);\n    // const accounts = await web3.eth.getAccounts()\n    // console.log(accounts);\n    // this.setState({ account: accounts[0] })\n\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Hello, World!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Your account: \", this.state.account));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dylanskelly/Desktop/block-change/src/App.js"],"names":["React","Component","Web3","App","componentWillMount","loadBlockchainData","console","log","givenProvider","window","etherium","web3","ethereum","enable","accounts","eth","getAccounts","error","constructor","props","state","account","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,kBAAL;AACD;;AAED,QAAMA,kBAAN,GAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,aAAjB;;AACA,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,YAAMC,IAAI,GAAG,IAAIT,IAAJ,CAASO,MAAM,CAACC,QAAhB,CAAb;;AACA,UAAI;AACF;AACA,cAAMD,MAAM,CAACG,QAAP,CAAgBC,MAAhB,EAAN,CAFE,CAGF;;AACA,cAAMC,QAAQ,GAAG,MAAMH,IAAI,CAACI,GAAL,CAASC,WAAT,EAAvB;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACD,OAND,CAME,OAAOG,KAAP,EAAc;AACZ;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACH;AACF,KAdwB,CAezB;AACA;AACA;AACA;AACA;AACA;;AACD;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkB,KAAKF,KAAL,CAAWC,OAA7B,CAFF,CADF;AAMD;;AAxCyB;;AA2C5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport './App.css'\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    console.log(Web3.givenProvider)\n    if (window.etherium) {\n      const web3 = new Web3(window.etherium);\n      try {\n        // Request account access if needed\n        await window.ethereum.enable();\n        // Acccounts now exposed\n        const accounts = await web3.eth.getAccounts()\n        console.log(accounts);\n      } catch (error) {\n          // User denied account access...\n          console.log(error);\n      }\n    }\n    // const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n    // const network = await web3.eth.net.getNetworkType();\n    // console.log(\"network: \" + network);\n    // const accounts = await web3.eth.getAccounts()\n    // console.log(accounts);\n    // this.setState({ account: accounts[0] })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { account: '' }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Hello, World!</h1>\n        <p>Your account: {this.state.account}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}