{"ast":null,"code":"var _jsxFileName = \"/Users/dylanskelly/Desktop/block-change/src/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    console.log(Web3.givenProvider);\n\n    if (window.etherium) {\n      const web3 = new Web3(window.etherium);\n\n      try {\n        // Request account access if needed\n        await window.ethereum.enable(); // Acccounts now exposed\n\n        web3.eth.sendTransaction({\n          /* ... */\n        });\n      } catch (error) {// User denied account access...\n      }\n    }\n\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const network = await web3.eth.net.getNetworkType();\n    console.log(\"network: \" + network);\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n    this.setState({\n      account: accounts[0]\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Hello, World!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Your account: \", this.state.account));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dylanskelly/Desktop/block-change/src/App.js"],"names":["React","Component","Web3","App","componentWillMount","loadBlockchainData","console","log","givenProvider","window","etherium","web3","ethereum","enable","eth","sendTransaction","error","network","net","getNetworkType","accounts","getAccounts","setState","account","constructor","props","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,kBAAL;AACD;;AAED,QAAMA,kBAAN,GAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,aAAjB;;AACA,QAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,YAAMC,IAAI,GAAG,IAAIT,IAAJ,CAASO,MAAM,CAACC,QAAhB,CAAb;;AACA,UAAI;AACF;AACA,cAAMD,MAAM,CAACG,QAAP,CAAgBC,MAAhB,EAAN,CAFE,CAGF;;AACAF,QAAAA,IAAI,CAACG,GAAL,CAASC,eAAT,CAAyB;AAAC;AAAD,SAAzB;AACD,OALD,CAKE,OAAOC,KAAP,EAAc,CACZ;AACH;AACF;;AACD,UAAML,IAAI,GAAG,IAAIT,IAAJ,CAASA,IAAI,CAACM,aAAL,IAAsB,uBAA/B,CAAb;AACA,UAAMS,OAAO,GAAG,MAAMN,IAAI,CAACG,GAAL,CAASI,GAAT,CAAaC,cAAb,EAAtB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcU,OAA1B;AACA,UAAMG,QAAQ,GAAG,MAAMT,IAAI,CAACG,GAAL,CAASO,WAAT,EAAvB;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAYa,QAAZ;AACA,SAAKE,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAEH,QAAQ,CAAC,CAAD;AAAnB,KAAd;AACD;;AAEDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEH,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkB,KAAKD,KAAL,CAAWH,OAA7B,CAFF,CADF;AAMD;;AAtCyB;;AAyC5B,eAAepB,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport './App.css'\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    console.log(Web3.givenProvider)\n    if (window.etherium) {\n      const web3 = new Web3(window.etherium);\n      try {\n        // Request account access if needed\n        await window.ethereum.enable();\n        // Acccounts now exposed\n        web3.eth.sendTransaction({/* ... */});\n      } catch (error) {\n          // User denied account access...\n      }\n    }\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n    const network = await web3.eth.net.getNetworkType();\n    console.log(\"network: \" + network);\n    const accounts = await web3.eth.getAccounts()\n    console.log(accounts);\n    this.setState({ account: accounts[0] })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { account: '' }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Hello, World!</h1>\n        <p>Your account: {this.state.account}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}